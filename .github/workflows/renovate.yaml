name: Renovate
on:
  schedule:
    - cron: "0 0 */1 * *"
  workflow_dispatch:
jobs:
  renovate:
    runs-on: arc-runner
    steps:
      - name: Setup Secrets
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          github_app_id="$(cat /secrets/github-app-id)"
          echo "::add-mask::$github_app_id"
          echo "GITHUB_APP_ID=$github_app_id" >> "$GITHUB_ENV"
          private_key="$(cat /secrets/github-private-key | base64 -d)"
          while read -r line;
          do
            echo "::add-mask::${line}";
          done <<< "$private_key"
          {
            echo "GITHUB_PRIVATE_KEY<<EOF"
            echo "$private_key"
            echo EOF
          } >> "$GITHUB_ENV"
          redis_url="redis://$(cat /secrets/redis-creds | jq '.data.username' -r):$(cat /secrets/redis-creds | jq '.data.password' -r)@redis-master.redis.svc.cluster.local:6379/0"
          echo "::add-mask::$redis_url"
          echo RENOVATE_REDIS_URL="$redis_url" >> "$GITHUB_ENV"
          password="$(cat /secrets/github-ghcr-token)"
          echo "::add-mask::$password"
          echo DOCKER_GHCR_IO_PASSWORD="$password" >> "$GITHUB_ENV"
          username="$(cat /secrets/github-ghcr-user)"
          echo "::add-mask::$username"
          echo DOCKER_GHCR_IO_USERNAME="$username" >> "$GITHUB_ENV"
      - name: Get token
        id: get_token
        uses: actions/create-github-app-token@v1
        with:
          private-key: ${{ env.GITHUB_PRIVATE_KEY }}
          app-id: ${{ env.GITHUB_APP_ID }}
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Self-hosted Renovate
        uses: renovatebot/github-action@v40.1.3
        with:
          token: "${{ steps.get_token.outputs.token }}"
